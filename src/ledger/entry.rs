use chrono::NaiveDateTime;
use rust_decimal::Decimal;
use serde::{Deserialize, Serialize};  // For exports later

#[derive(Debug, Clone, Serialize, Deserialize)]  // Traits: Debug for printing, Clone for copying, Serialize/Deserialize for JSON/CSV
pub struct Entry {
    pub id: Option<i64>,  // Optional ID (auto-generated by DB later)
    pub date: NaiveDateTime,  // Timestamp of the entry
    pub amount: Decimal,  // Money value, positive for income, negative for expense
    pub description: String,  // What it's for
    pub category: Option<String>,  // Optional tag like "food" or "salary"
    pub hash: Option<String>,  // For auditability later (BLAKE3 hash)
}

impl Entry {
    // A simple constructor (factory method) to create new entries
    pub fn new(
        date: NaiveDateTime,
        amount: Decimal,
        description: String,
        category: Option<String>,
    ) -> Self {
        Self {
            id: None,
            date,
            amount,
            description,
            category,
            hash: None,  // We'll compute this later in crypto/
        }
    }
}